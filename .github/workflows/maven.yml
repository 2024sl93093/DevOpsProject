name: ci/cd flow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn clean install

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: jar-artifact
          path: target/*.jar

  test:
    runs-on: ubuntu-latest
    needs: build  # Test only runs if Build is successful

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Run JUnit Tests with Maven
        run: mvn test

  docker:
    runs-on: ubuntu-latest
    needs: test  # Docker build only runs if Tests pass

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn clean install

      - name: Build and Push docker image
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: 2024sl93093/springbootimage
          tags: latest
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
  deployment:
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - uses: actions/checkout@v4
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
            version: 'latest'
      - name: Deploy to Kyma Cluster
        run: |
          echo "${{ secrets.KUBECONFIG }}" > kubeconfig.yaml
          export KUBECONFIG=$(pwd)/kubeconfig.yaml
          kubectl apply -f app.yaml
          kubectl rollout restart deployment palindromechecker







